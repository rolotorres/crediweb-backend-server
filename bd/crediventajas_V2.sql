CREATE TABLE roles(
roleId SERIAL,
roleType VARCHAR(10) NOT NULL,
description VARCHAR(100) NOT NULL,
active BOOLEAN DEFAULT TRUE,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT role_PK PRIMARY KEY (roleId)
);

CREATE TABLE deparments(
dptoId SERIAL,
dptoName VARCHAR(15) NOT NULL,
active BOOLEAN DEFAULT TRUE,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT deparment_PK PRIMARY KEY (dptoId)
);

CREATE TABLE commercial_references(
comRefId SERIAL,
name VARCHAR(50) NOT NULL,
phone VARCHAR(30) NOT NULL,
rating VARCHAR(100),
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT comRef_PK PRIMARY KEY (comRefId)
);

CREATE TABLE requirements(
requireId SERIAL,
description VARCHAR(100) NOT NULL,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT require_PK PRIMARY KEY (requireId)
);

CREATE TABLE credit_type(
crediTypeId SERIAL,
description VARCHAR(100),
active BOOLEAN DEFAULT TRUE,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT crediType_PK PRIMARY KEY(crediTypeId)
);

CREATE TABLE amortizacion(
amortizacionId SERIAL,
detail VARCHAR(100),
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT amortizacion_PK PRIMARY KEY(amortizacionId)
);

CREATE TABLE client_types(
clientTypeId SERIAL,
description VARCHAR(20),
active BOOLEAN DEFAULT TRUE,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT clientType_PK PRIMARY KEY (clientTypeId)
);

CREATE TABLE fajas(
fajaId SERIAL,
description char(1) NOT NULL,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT faja_PK PRIMARY KEY (fajaId),
CONSTRAINT desc_CHK CHECK (description ~ '^[^0-9]*$')
);

CREATE TABLE cities(
cityId SERIAL,
dptoId INTEGER NOT NULL,
description VARCHAR(40),
active BOOLEAN DEFAULT TRUE,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT cityId_PK PRIMARY KEY (cityId),
CONSTRAINT dptoId_FK FOREIGN KEY (dptoId) REFERENCES deparments(dptoId)
);

CREATE TABLE companies_data(
compDataId SERIAL,
fajaRepOneId INTEGER NOT NULL,
fajaRepTwoId INTEGER DEFAULT NULL,
repOneName VARCHAR(30) NOT NULL,
repOneCi VARCHAR(30) NOT NULL,
repTwoName VARCHAR(30) NOT NULL,
repTwoCi VARCHAR(30) NOT NULL,
seniority VARCHAR(10) NOT NULL,
active BOOLEAN DEFAULT TRUE,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT compData_PK PRIMARY KEY(compDataId),
CONSTRAINT fajaRepOne_FK FOREIGN KEY (fajaRepOneId) REFERENCES fajas(fajaId),
CONSTRAINT fajaRepTwo_FK FOREIGN KEY (fajaRepTwoId) REFERENCES fajas(fajaId)
);

CREATE TABLE client_data(
clientId SERIAL,
cityId INTEGER NOT NULL,
fajaId INTEGER NOT NULL,
clientTypeId INTEGER NOT NULL,
compDataId INTEGER DEFAULT NULL,
homeAddress VARCHAR(100) NOT NULL,
DNI INTEGER NOT NULL,
age INTEGER NOT NULL,
contact VARCHAR(30) NOT NULL,
lat VARCHAR(50) DEFAULT NULL,
lng VARCHAR(50) DEFAULT NULL,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT clientId_PK PRIMARY KEY (clientId),
CONSTRAINT cytyId_FK FOREIGN KEY (cityId) REFERENCES cities(cityId),
CONSTRAINT fajaId_FK FOREIGN KEY (fajaId) REFERENCES fajas(fajaId),
CONSTRAINT clientType_FK FOREIGN KEY (clientTypeId) REFERENCES client_types(clientTypeId),
CONSTRAINT comptipe_FK FOREIGN KEY (compDataId) REFERENCES companies_data(compDataId)
);

CREATE TABLE users(
userId SERIAL,
roleId INTEGER NOT NULL DEFAULT 1,
clientId INTEGER DEFAULT NULL,
userName VARCHAR(45) NOT NULL,
userLastname VARCHAR(45) NOT NULL,
usermail VARCHAR(45) NOT NULL,
alias VARCHAR(10) NOT NULL,
pasword CHAR(90) NOT NULL,
avatar VARCHAR(200) DEFAULT NULL,
active BOOLEAN DEFAULT TRUE,
createdAt TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
updatedAt TIMESTAMP WITH TIME ZONE,
CONSTRAINT userId_PK PRIMARY KEY (userId),
CONSTRAINT roleId_FK FOREIGN KEY (roleId) REFERENCES roles(roleId),
CONSTRAINT clientId_FK FOREIGN KEY (clientId) REFERENCES client_data(clientId),
CONSTRAINT usermail_UC UNIQUE (usermail),
CONSTRAINT alias_UC UNIQUE (alias)
);